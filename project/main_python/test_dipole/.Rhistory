}
row.names(comp) <- molecules
for (i in 1:length(comp)) {
if (class(comp[[i]]) == "character") {
comp[[i]] <- as.numeric(comp[[i]])
}
}
return(comp)
}
diversitree::set.defaults(comp.set.hetero, getwd())
modelling.data <- function(datasets, output_file) {
print('make sure you are in a neutral directory - this creates a lot of csv files!')
output = data.table::fread(output_file)[, 2]
dir.name <- readline('Name the datasets directory: ')
dir.create(dir.name)
setwd(dir.name)
names(output) <- 'output'
ready.for.modelling <- lapply(datasets, function(x) dplyr::mutate(x, output))
for (i in 1:length(ready.for.modelling)) {
write.csv(ready.for.modelling[[i]], paste(names(ready.for.modelling)[[i]], '.csv', sep = ''))
}
setwd('..')
}
model.plot <- function(model = models[1,1], data) {
best.mod <- lm(model, data = data)
pred_interval <- predict(best.mod, newdata = data, interval = 'pre', level = 0.9)
plot.dat <- data.frame(cbind(data$output, pred_interval))
colnames(plot.dat) <- c('Measured', 'Predicted', 'lwr', 'upr')
rownames(plot.dat) <- row.names(data)
row.names(plot.dat) <- stringr::str_replace(row.names(plot.dat),"o_",'2-')
row.names(plot.dat) <- stringr::str_replace(row.names(plot.dat),"m_",'3-')
row.names(plot.dat) <- stringr::str_replace(row.names(plot.dat),"p_",'4-')
row.names(plot.dat) <- stringr::str_replace(row.names(plot.dat),"o4-",'2,4-')
row.names(plot.dat) <- stringr::str_replace(row.names(plot.dat),"m3-",'3,3-')
for (i in 1:nrow(plot.dat)) {
if (grepl('3-',row.names(plot.dat)[i])) {
plot.dat[i,5] <- 'meta'
}
if (grepl('2-',row.names(plot.dat)[i])) {
plot.dat[i,5] <- 'ortho'
}
if (grepl('basic',row.names(plot.dat)[i])) {
plot.dat[i,5] <- 'Ph'
}
if (grepl('4-',row.names(plot.dat)[i])) {
plot.dat[i,5] <- 'para'
}
}
plot.dat <- dplyr::mutate(plot.dat, label = row.names(plot.dat))
colnames(plot.dat)[5] <- 'Position'
plot <- ggplot(plot.dat, aes(x = Measured, y = Predicted)) +
geom_point(size = 2, shape = 15,aes(color = Position)) +
stat_smooth(aes(y = lwr), color = "cadetblue", linetype = "dashed",
se = F, method = 'lm', fullrange = T, size = 0.8) +
stat_smooth(aes(y = upr), color = "cadetblue", linetype = "dashed",
se = F, method = 'lm', fullrange = T, size = 0.8) +
labs(x = 'Measured %',y = 'Predicted %') +
stat_smooth(method = 'lm',se = F, formula = y~x,
color = 'black',fullrange = T, linetype = 'dashed') +
theme(axis.line.x = element_line(size = 1, colour = "black"),
axis.line.y = element_line(size = 1, colour = "black"),
axis.text.x = element_text(colour = "black", size = 12,face = 'bold'),
axis.text.y = element_text(colour = "black", size = 12,face = 'bold'),
axis.title.x = element_text(colour = "black", size = 12,face = 'bold'),
axis.title.y = element_text(colour = "black", size = 12,face = 'bold'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(), panel.background = element_blank(),
legend.position = c(2,2)) +
scale_color_manual(values = c(Ph = "black", meta = 'tan1',
para = '#66a182',ortho = '#d1495b')) +
xlim(min(plot.dat[,3]), max(plot.dat[,4])) +
ylim(min(plot.dat[,3]), max(plot.dat[,4])) +
coord_fixed(ratio = 1) +
geom_text_repel(size = 3,
aes(label = label),
min.segment.length = Inf,
seed = 42,
point.padding = 0.4,
segment.color = 'white',
force_pull = 0.02,
nudge_x = 0.022,
direction = 'y') +
theme(text = element_text(family = 'Helvetica'))
plot
}
library(ggplot2)
library(ggrepel)
library(extrafont)
model.info <- function(dataset, min = 2, max = floor(dim(mod_data)[1] / 5), leave.out = '', predict = F) {
print(dataset)
mod_data <- data.frame(data.table::fread(dataset, header = T, check.names = T))
RN <- mod_data[,1]
mod_data <- mod_data[,-1]
CN <- names(mod_data)
mod_data <- data.frame(cbind(scale(mod_data[,1:dim(mod_data)[2] - 1], T, T), mod_data$output))
names(mod_data) <- CN
row.names(mod_data) <- RN
pred.data <- mod_data[row.names(mod_data) == leave.out, ]
mod_data <- mod_data[row.names(mod_data) != leave.out, ]
models <- sub_model(mod_data, min = min, max = max)
tab <- knitr::kable(models)
print(tab)
what.model <- readline('Choose the model you would like to plot (line number): ')
what.model <- as.numeric(what.model)
mod.sum <- summary(lm(models[what.model, 1], mod_data))$coefficients
cat('
Model Coefficients')
colnames(mod.sum)[4] <- 'p value'
k.mod <- knitr::kable(mod.sum)
print(k.mod)
cv_3fold <- measure_cv(models[what.model,1], mod_data, dim(mod_data)[2], 3, 500)
dt3 <- data.frame(cv_3fold[[2]], cv_3fold[[1]])
names(dt3) <- c('Q2', 'MAE')
cat('
3-fold CV')
tab_dt3 <- knitr::kable(dt3)
print(tab_dt3)
cv_5fold <- measure_cv(models[what.model,1], mod_data, dim(mod_data)[2], 5, 1000)
dt5 <- data.frame(cv_5fold[[2]], cv_5fold[[1]])
names(dt5) <- c('Q2', 'MAE')
cat('
5-fold CV')
tab_dt5 <- knitr::kable(dt5)
print(tab_dt5)
if (predict == T) {
prediction <- predict(lm(models[what.model, 1], mod_data), pred.data)
real <- pred.data$output
prd.tab <- data.frame(prediction, real)
names(prd.tab) <- c('OOS Pred', 'OOS Measured')
k.prd.tab <- knitr::kable(prd.tab)
print(k.prd.tab)
}
mod_data_unn <- data.frame(data.table::fread(dataset, header = T, check.names = T))
mod.sum.unnormalized <- summary(lm(models[what.model, 1], mod_data_unn))$coefficients
cat('
Unnormalized Data Model Coefficients')
colnames(mod.sum.unnormalized)[4] <- 'p value'
k.mod.unn <- knitr::kable(mod.sum.unnormalized)
print(k.mod.unn)
## model.plot
info.table <- data.frame(matrix(ncol = 1, nrow = 4))
info.table[1,1] <- as.character(round(models[what.model, 2], 2))
info.table[2,1] <- as.character(round(models[what.model, 3], 2))
info.table[3,1] <- as.character(round(dt5[1, 1], 2))
info.table[4,1] <- as.character(round(dt3[1, 1], 2))
row.names(info.table) <-  c('R2', 'Q2_loo', 'Q2_5fold', 'Q2_3fold')
names(info.table) <- 'stats'
text1 <- paste(row.names(info.table)[1], info.table[1,1], sep = ' = ')
text2 <- paste(row.names(info.table)[2], info.table[2,1], sep = ' = ')
text3 <- paste(row.names(info.table)[3], info.table[3,1], sep = ' = ')
text4 <- paste(row.names(info.table)[4], info.table[4,1], sep = ' = ')
equation <- list()
for (i in 2:nrow(mod.sum)) {
equation[i] <- ifelse(mod.sum[i,1] < 0, paste(round(mod.sum[i,1], 2), row.names(mod.sum)[i], sep = ' * '),
paste(paste('+', round(mod.sum[i,1], 2), sep = ''), row.names(mod.sum)[i], sep = ' * '))
}
equation[1] <- as.character(round(mod.sum[1,1], 2))
equation <- paste(equation,  collapse = ' ')
annotations <- stringr::str_c(c(equation, text1, text2, text3, text4), collapse = "\n")
model = models[what.model, 1]
data = mod_data
best.mod <- lm(model, data = data)
pred_interval <- predict(best.mod, newdata = data, interval = 'pre', level = 0.9)
plot.dat <- data.frame(cbind(data$output, pred_interval))
colnames(plot.dat) <- c('Measured', 'Predicted', 'lwr', 'upr')
rownames(plot.dat) <- row.names(data)
row.names(plot.dat) <- stringr::str_replace(row.names(plot.dat),"o_",'2-')
row.names(plot.dat) <- stringr::str_replace(row.names(plot.dat),"m_",'3-')
row.names(plot.dat) <- stringr::str_replace(row.names(plot.dat),"p_",'4-')
row.names(plot.dat) <- stringr::str_replace(row.names(plot.dat),"o4-",'2,4-')
row.names(plot.dat) <- stringr::str_replace(row.names(plot.dat),"m3-",'3,3-')
for (i in 1:nrow(plot.dat)) {
if (grepl('3-',row.names(plot.dat)[i])) {
plot.dat[i,5] <- 'meta'
}
if (grepl('2-',row.names(plot.dat)[i])) {
plot.dat[i,5] <- 'ortho'
}
if (grepl('basic',row.names(plot.dat)[i])) {
plot.dat[i,5] <- 'Ph'
}
if (grepl('4-',row.names(plot.dat)[i])) {
plot.dat[i,5] <- 'para'
}
}
plot.dat <- dplyr::mutate(plot.dat, label = row.names(plot.dat))
colnames(plot.dat)[5] <- 'Position'
plot <- ggplot(plot.dat, aes(x = Measured, y = Predicted)) +
geom_point(size = 2, shape = 18,aes(color = Position)) +
stat_smooth(aes(y = lwr), color = "cadetblue", linetype = "dashed",
se = F, method = 'lm', fullrange = T, size = 0.8) +
stat_smooth(aes(y = upr), color = "cadetblue", linetype = "dashed",
se = F, method = 'lm', fullrange = T, size = 0.8) +
labs(x = 'Measured',y = 'Predicted') +
stat_smooth(method = 'lm',se = F, formula = y~x,
color = 'black',fullrange = T, linetype = 'dashed') +
theme(axis.line.x = element_line(size = 1, colour = "black"),
axis.line.y = element_line(size = 1, colour = "black"),
axis.text.x = element_text(colour = "black", size = 12,face = 'bold'),
axis.text.y = element_text(colour = "black", size = 12,face = 'bold'),
axis.title.x = element_text(colour = "black", size = 12,face = 'bold'),
axis.title.y = element_text(colour = "black", size = 12,face = 'bold'),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(), panel.background = element_blank(),
legend.position = c(2,2)) +
scale_color_manual(values = c(Ph = "black", meta = 'tan1',
para = '#66a182',ortho = '#d1495b')) +
xlim(min(plot.dat[,3]), max(plot.dat[,4])) +
ylim(min(plot.dat[,3]), max(plot.dat[,4])) +
coord_fixed(ratio = 1) +
geom_text_repel(size = 3,
aes(label = label),
min.segment.length = Inf,
seed = 42,
point.padding = 0.4,
segment.color = 'white',
force_pull = 0.02,
nudge_x = 0.022,
direction = 'y') +
theme(text = element_text(family = 'Helvetica')) +
annotate('text',
x = min(plot.dat[,3]),
y = max(plot.dat[,2]), label = annotations,
parse = F,
hjust = "left", vjust = "top")
plot
}
##################################################
###############      COMP.SET      ###############
##################################################
# Use setwd('path/to/molecular_family_directory').
#
# Please execute the command comp.set() while in a family directory.
# Use the command com.set.hetero() if you wish to process a set of molecules
# that lack a benzene ring of interest.
#
# Enter a list of ring atoms with the order: primary axis - para followed by primary,
# ortho - ortho atoms relative to primary atom and meta - meta atoms relative to primary.
# For example - for a ring of atoms 1-6 where 4 is connected to the main group and 1 is para to it
# (ortho will be 3 & 5 and meta will be 2 & 6) - enter the input 1 4 3 5 2 6.
#
# Enter a list of single (not in a ring) bonds with their atoms in numeric order (increasing).
# For example - for the bonds 5-6 1-6 8-16 enter 5 6 1 6 8 16.
#
# The program will extract the stretch frequency of the specified bonds and two ring vibrations,
# the first one represents a vibration in which the bonds move perpendicular to the primary axis and the second one
# represents a parallel movement.
x=nbo.info("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","2 3 4 5")
View(x)
View(x)
z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","2 3 4 5")
fun<-function(mol.dir){
origin <- as.numeric(unlist(strsplit(coordinates, " "))[[1]])
direction <- as.numeric(unlist(strsplit(coordinates, " "))[[2]])
bondi <- data.frame(matrix(nrow = 14, ncol = 2))
bondi[, 1] <- c("H", "B", "C", "N", "O", "F", "Si", "P", "S", "Cl", "Br", "I", 'Co', 'Ni')
bondi[, 2] <- c(1.10, 1.92, 1.70, 1.55, 1.52, 1.47, 2.10, 1.80, 1.80, 1.75, 1.83, 1.98, 2.00, 2.00)
colnames(bondi) <- c("Atom", "Radius")
Paton.Atypes <- data.frame(c("C", "C2", "C3", "C4", "C5/N5", "C6/N6", "C7", "C8",
"H", "N", "C66", "N4", "O", "O2", "P", "S", 'S.O', "S1", "F", "Cl", "S4", "Br", "I"),
c(1.50,1.60,1.60,1.50,1.70,1.70,1.70,1.50,1.00,1.50,
1.70,1.45,1.35,1.35,1.40,1.70,1.70,1.00,1.35,1.80,1.40,1.95,2.15))
colnames(Paton.Atypes) <- c("Atom", "Radius")
Paton.Atypes <- rbind(Paton.Atypes, bondi[!bondi$Atom %in% Paton.Atypes$`Atom`,])
xyz_file_generator(mol.dir)
setwd(mol.dir)
bonds <- unique(data.table::fread(list.files(pattern = "bonds")))
bonds <- data.frame(sapply(bonds, as.numeric))
}
f=fun("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1")
fun<-function(mol.dir){
bondi <- data.frame(matrix(nrow = 14, ncol = 2))
bondi[, 1] <- c("H", "B", "C", "N", "O", "F", "Si", "P", "S", "Cl", "Br", "I", 'Co', 'Ni')
bondi[, 2] <- c(1.10, 1.92, 1.70, 1.55, 1.52, 1.47, 2.10, 1.80, 1.80, 1.75, 1.83, 1.98, 2.00, 2.00)
colnames(bondi) <- c("Atom", "Radius")
Paton.Atypes <- data.frame(c("C", "C2", "C3", "C4", "C5/N5", "C6/N6", "C7", "C8",
"H", "N", "C66", "N4", "O", "O2", "P", "S", 'S.O', "S1", "F", "Cl", "S4", "Br", "I"),
c(1.50,1.60,1.60,1.50,1.70,1.70,1.70,1.50,1.00,1.50,
1.70,1.45,1.35,1.35,1.40,1.70,1.70,1.00,1.35,1.80,1.40,1.95,2.15))
colnames(Paton.Atypes) <- c("Atom", "Radius")
Paton.Atypes <- rbind(Paton.Atypes, bondi[!bondi$Atom %in% Paton.Atypes$`Atom`,])
xyz_file_generator(mol.dir)
setwd(mol.dir)
bonds <- unique(data.table::fread(list.files(pattern = "bonds")))
bonds <- data.frame(sapply(bonds, as.numeric))
}
f=fun("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1")
onds <- unique(data.table::fread(list.files(pattern = "bonds")))
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1")
onds <- unique(data.table::fread(list.files(pattern = "bonds")))
View(coor.trans.dir)
View(coor.trans.dir)
View(coor.trans.dir)
View(coor.trans)
z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","2 3 4 5")
z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","2 3 4 5")
View(steRimol.df)
View(steRimol.df)
z=steRimol.df("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/")
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
z=steRimol.df("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
z=steRimol.df("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
View(steRimol)
View(steRimol)
z=steRimol.df("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
View(steRimol)
View(steRimol)
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
z=steRimol.df("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole",'2 3')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
z=steRimol.df("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","2 3 4")
View(xyz_file_generator)
View(xyz_file_generator)
xyz_file_generator("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1")
xyz_file_generator("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1")
View(steRimol)
View(steRimol)
z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","2 3 4")
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","2 3 4")
View(steRimol)
View(steRimol)
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","2 3 4")
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","2 3 4")
z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2 3")
z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
View(z)
View(z)
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
setwd("C:/Program Files/R/R-4.2.1/library")
library('tools')
library('plyr')
source("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/comp.set.1.1.R")
setwd("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole")
#z=steRimol("C:/Users/edens/Documents/GitHub/learning_python/project/main_python/test_dipole/molecule1","1 2")
y=steRimol.df()
